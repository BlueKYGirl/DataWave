// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace DataWave.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240404200323_FifthConfig")]
    partial class FifthConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeviceId");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f73f65e4-8b79-4fd1-b9a2-cb109ca932e2"),
                            PhoneNumber = "1234567890",
                            PlanId = new Guid("f73f65e4-8b79-4fd1-b9a2-cb109ca932e2"),
                            UserId = new Guid("06917677-cdd6-4523-91b8-88d6d0a912d2")
                        },
                        new
                        {
                            Id = new Guid("b82a50f6-40b8-4b10-b8ef-9f401e3f0ac5"),
                            PhoneNumber = "0987654321",
                            PlanId = new Guid("b82a50f6-40b8-4b10-b8ef-9f401e3f0ac5"),
                            UserId = new Guid("798acf1b-7339-44bd-8367-7132a978d7b1")
                        },
                        new
                        {
                            Id = new Guid("eaa6bc36-60f3-4815-b19a-8f2b79f4aa67"),
                            PhoneNumber = "5432167890",
                            PlanId = new Guid("eaa6bc36-60f3-4815-b19a-8f2b79f4aa67"),
                            UserId = new Guid("2a36409f-6732-459b-b7d1-a561c521a3cb")
                        });
                });

            modelBuilder.Entity("Entities.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlanId");

                    b.Property<int?>("DeviceLimit")
                        .HasColumnType("int");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Plans");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f73f65e4-8b79-4fd1-b9a2-cb109ca932e2"),
                            DeviceLimit = 10,
                            PlanName = "Basic Plan",
                            Price = 29.99m
                        },
                        new
                        {
                            Id = new Guid("b82a50f6-40b8-4b10-b8ef-9f401e3f0ac5"),
                            DeviceLimit = 20,
                            PlanName = "Premium Plan",
                            Price = 49.99m
                        },
                        new
                        {
                            Id = new Guid("eaa6bc36-60f3-4815-b19a-8f2b79f4aa67"),
                            DeviceLimit = 3,
                            PlanName = "Free Plan",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06917677-cdd6-4523-91b8-88d6d0a912d2"),
                            Email = "calexander@contosouniversity.edu",
                            FirstName = "Carson",
                            LastName = "Alexander"
                        },
                        new
                        {
                            Id = new Guid("798acf1b-7339-44bd-8367-7132a978d7b1"),
                            Email = "malonso@contosouniversity.edu",
                            FirstName = "Meredith",
                            LastName = "Alonso"
                        },
                        new
                        {
                            Id = new Guid("2a36409f-6732-459b-b7d1-a561c521a3cb"),
                            Email = "aanand@contosouniversity.edu",
                            FirstName = "Arturo",
                            LastName = "Anand"
                        });
                });

            modelBuilder.Entity("PlanUser", b =>
                {
                    b.Property<Guid>("PlansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlansId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("PlanUser");
                });

            modelBuilder.Entity("Entities.Device", b =>
                {
                    b.HasOne("Entities.Plan", "Plan")
                        .WithMany("Devices")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserId");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlanUser", b =>
                {
                    b.HasOne("Entities.Plan", null)
                        .WithMany()
                        .HasForeignKey("PlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Plan", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
